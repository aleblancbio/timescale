% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intervalUniroot.R
\name{intervalUniroot}
\alias{intervalUniroot}
\title{Interval uniroot}
\usage{
intervalUniroot(
  f,
  lower,
  upper,
  constantLower,
  constantUpper,
  correction = "constantLower",
  ...
)
}
\arguments{
\item{f}{a function for which to find the root, and passed to \code{uniroot}.}

\item{lower}{the lower end-point of the interval to be searched for the root.}

\item{upper}{the upper end-point of the interval to be searched for the root.}

\item{constantLower}{a vector of lower limits of intervals on which the function is constant.}

\item{constantUpper}{a vector of upper limits of intervals on which the function is constant.}

\item{correction}{a \code{character} indicating to which value of the interval correct the root, either \code{constantLower} or \code{constantUpper}.}

\item{...}{arguments to pass to the function \code{uniroot}.}
}
\value{
Return only the root (a constant), other components returned by \code{uniroot} are dismissed.
}
\description{
Extend the \code{uniroot} function from \code{stats} by accepting intervals on which the function is constant. The function then return one of the endpoints of the interval.
}
\details{
The function does not modify the searching behaviour of \code{uniroot}, but instead correct the root if it falls on a constant interval. Note than intervals are truncated at \code{lower} and \code{upper} if they fall outside the searching interval.
}
\examples{
#Define a function that reach zero at a +- delta
f <- function(x, a, delta){
 y <- rep(0,length = length(x))
 y[x <= a - delta] <- x[x <= a - delta] - (a - delta)
 y[x >= a + delta] <- x[x >= a + delta] - (a + delta)
 
 return(y)  
}
#Define parameters and range on which the function is known to be constant
a <- 5
delta <- 1
constantLower <- (a - delta)
constantUpper <- (a + delta)
lower = - 10
upper = 10
correction = "constantLower"
intervalUniroot(f, lower, upper, constantLower, constantUpper, correction = correction, a = a, delta = delta)

correction = "constantUpper"
intervalUniroot(f, lower, upper, constantLower, constantUpper, correction = correction, a = a, delta = delta)

correction = "constantUpper"
lower = 4.5
upper = 5.5
intervalUniroot(f, lower, upper, constantLower, constantUpper, correction = correction, a = a, delta = delta)

uniroot(f, lower = lower, upper = upper, a = a, delta = delta)$root

}
