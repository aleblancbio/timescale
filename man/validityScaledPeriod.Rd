% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validityScaledPeriod.R
\name{validityScaledPeriod}
\alias{validityScaledPeriod}
\title{Scaled period validity}
\usage{
validityScaledPeriod(
  x1,
  scaledPeriod,
  model,
  conditions,
  param = list(),
  control = list(),
  interpolation = "constant"
)
}
\arguments{
\item{x1}{\code{numeric} vector of initial time from which evaluate the scaling}

\item{scaledPeriod}{\code{numeric} vector of period in the scaled domain to add to \code{x1}.}

\item{model}{\code{character} corresponding to the name of the rate model.}

\item{conditions}{\code{data.frame} with columns named \code{time} and variables expected to correspond to those of the model.}

\item{param}{\code{list} parameters of the model.}

\item{control}{\code{list} of arguments that control the behaviour of the model.}

\item{interpolation}{\code{character} corresponding to the name of the interpolating method for conditions. Available methods only include \code{constant} at the moment and is the default value.}
}
\value{
Return \code{TRUE} if the condition is respected and an error otherwise.
}
\description{
Check that adding a period in the scaled domain from a time vector (\code{x1}), return a vector of time the range of \code{conditions} time. Also check that \code{x1} ans \code{scaledPeriod} have the same length.
}
\examples{
conditions <- data.frame(time = seq(0,30,length.out = 10), temp = rnorm(10, 10, 5))
condModel <- interpolateCond(conditions, method = "linear")
model <- "modelLinear"
param = list(a = 1, T0 = 10)
x1 = seq(1,10,length.out = 10)
scaledPeriod = rep(10,10)
validityScaledPeriod(x1, scaledPeriod, model = model, conditions = conditions, param = param)
}
